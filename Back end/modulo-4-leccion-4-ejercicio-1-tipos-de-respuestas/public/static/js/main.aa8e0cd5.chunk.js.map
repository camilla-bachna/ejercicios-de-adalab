{"version":3,"sources":["images/RickandMorty.png","components/Header.js","components/CharacterCard.js","components/CharacterList.js","components/FilterByName.js","components/FilterByEspecie.js","components/Filters.js","services/GetDataFromApi.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["Header","className","src","photo","alt","CharacterCard","props","character","image","name","species","CharacterList","characterElements","characters","map","console","log","to","id","length","FilterByName","htmlFor","type","value","onChange","ev","handleFilter","target","FilterByEspecie","clasName","Filters","onSubmit","preventDefault","GetDataFromApi","fetch","then","response","json","data","results","status","origin","episode","especies","CharacterDetail","App","useState","setCharacters","setName","specie","setEspecie","useEffect","FilterCharacters","filter","toUpperCase","includes","sort","a","z","exact","path","inputChange","targetValue","render","routerProps","match","params","charactertId","selectCharacter","find","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aa8e0cd5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/RickandMorty.de13d484.png\";","import React from \"react\";\r\nimport photo from \"../images/RickandMorty.png\";\r\nimport \"../stylesheets/Header.scss\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header__img\">\r\n      <img src={photo} alt=\"rick and morty\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <img\r\n        className=\"card__image\"\r\n        src={props.character.image}\r\n        alt=\"foto del personaje\"\r\n      />\r\n      <h2 className=\"card__title\"> {props.character.name}</h2>\r\n      <h4 className=\"card__description\">{props.character.species}</h4>\r\n    </>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nconst CharacterList = (props) => {\r\n  const characterElements = props.characters.map((character) => {\r\n    console.log(character);\r\n    return (\r\n      <li className=\"list__character\" key={character.id}>\r\n        <Link className=\"link\" to={`/character/${character.id}`}>\r\n          <CharacterCard character={character} />\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  if (props.characters.length === 0) {\r\n    return <h2>No hay personajes</h2>;\r\n  } else {\r\n    return (\r\n      <section>\r\n        <ul className=\"list__cards\">{characterElements}</ul>\r\n      </section>\r\n    );\r\n  }\r\n};\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter(ev.target.name, ev.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <label className=\"label__input\" htmlFor=\"name\">\r\n        Filtrar por nombre\r\n      </label>\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={props.name}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\nconst FilterByEspecie = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter(ev.target.name, ev.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <label clasName=\"label__especie\" htmlFor=\"especie\">\r\n        Filtrar por especie\r\n      </label>\r\n      <input\r\n        className=\"form__especie\"\r\n        type=\"text\"\r\n        name=\"specie\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByEspecie;\r\n","import FilterByName from \"./FilterByName\";\r\nimport FilterByEspecie from \"./FilterByEspecie\";\r\n\r\nconst Filters = (props) => {\r\n  const handldeForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <section>\r\n      <form className=\"form\" onSubmit={handldeForm}>\r\n        <FilterByName name={props.name} handleFilter={props.handleFilter} />\r\n        <FilterByEspecie handleFilter={props.handleFilter} />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default Filters;\r\n","const GetDataFromApi = () => {\r\n  return fetch(\"//rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      //results es el array que contiene a todos los personajes\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          image: character.image,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episode: character.episode,\r\n          especies: character.species,\r\n        };\r\n      });\r\n    });\r\n};\r\nexport default GetDataFromApi;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CharacterDetail = (props) => {\r\n  console.log(props.character);\r\n  return (\r\n    <section className=\"character__detail\">\r\n      <Link className=\"link__return\" to=\"/\">\r\n        Volver\r\n      </Link>\r\n      <article className=\"\">\r\n        <img\r\n          className=\"detail__img\"\r\n          src={props.character.image}\r\n          alt={`Imagen de ${props.character.name}`}\r\n        />\r\n        <h3 className=\"card__title\">Name{props.character.name}</h3>\r\n        <p className=\"card__description\">Estatus{props.character.status}</p>\r\n\r\n        <p className=\"card__description\">Origen{props.character.origin}</p>\r\n        <p className=\"card__description\">\r\n          Episodios: {props.character.episode.length}\r\n        </p>\r\n        <p className=\"card__description\">Especie{props.character.especies}</p>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\nexport default CharacterDetail;\r\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport \"../stylesheets/App.scss\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport GetDataFromApi from \"../services/GetDataFromApi\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [specie, setEspecie] = useState(\"\");\n\n  useEffect(() => {\n    GetDataFromApi().then((data) => setCharacters(data));\n  }, []);\n  const handleFilter = (inputChange, targetValue) => {\n    console.log(inputChange, targetValue);\n    if (inputChange === `name`) {\n      setName(targetValue);\n    } else if (inputChange === \"specie\") {\n      setEspecie(targetValue);\n    }\n  };\n  const FilterCharacters = characters\n    .filter((character) => {\n      return character.name.toUpperCase().includes(name.toUpperCase());\n    })\n    .sort(function (a, z) {\n      if (a.name > z.name) {\n        return 1;\n      } else if (a.name < z.name) {\n        return -1;\n      }\n      return 0;\n    })\n    .filter((character) => {\n      return character.especies.toUpperCase().includes(specie.toUpperCase());\n    });\n\n  console.log(FilterCharacters);\n\n  const renderCharacterDetail = (routerProps) => {\n    const id = routerProps.match.params.charactertId;\n    const selectCharacter = characters.find((character) => {\n      return character.id === parseInt(id);\n    });\n    return <CharacterDetail character={selectCharacter} />;\n  };\n\n  return (\n    <>\n      <h1 className=\"title__list\">Listado de Personajes</h1>\n\n      <div>\n        <Header />\n      </div>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters name={name} handleFilter={handleFilter} />\n            <CharacterList characters={FilterCharacters} />\n          </Route>\n          <Route\n            path=\"/character/:charactertId\"\n            render={renderCharacterDetail}\n          />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheets/index.scss\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}